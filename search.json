[{"path":"https://junnizhang.github.io/BayesRates/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 National School Development, Peking University Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Divorces in New Zealand","text":"vignette use BayesRates calculate age-specific rates turn age-specific rates total divorce rates. use administrative data divorce New Zealand New Zealand. counts divorce population dataset large, sampling errors small.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"packages","dir":"Articles","previous_headings":"Preliminaries","what":"Packages","title":"Divorces in New Zealand","text":"Besides BayesRates load dplyr, data manipulation, ggplot plotting.","code":"library(BayesRates) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"data","dir":"Articles","previous_headings":"Preliminaries","what":"Data","title":"Divorces in New Zealand","text":"data divorces ins nz_divorces, data frame contained BayesRates package. `nz_divorces four columns: age: factor levels \"15-19\",\"20-24\",…,\"60-64\",\"65+\"; sex: character vector values \"Female\" \"Male\"; time: integer vector values 1992,…,2021; nevent: numeric vector number divorces. data population nz_population, also contained BayesRates package. nz_population four columns: age: factor levels \"15-19\",\"20-24\",…,\"60-64\",\"65+\"; sex: character vector values \"Female\", \"Male\"; time: integer vector values 1992,…,2021; py: numeric vector person-years exposure. person-years exposure, hence number divorces, quite large.","code":"nz_divorces #> # A tibble: 660 × 4 #>    age   sex     time nevent #>    <fct> <chr>  <int>  <dbl> #>  1 15-19 Female  1992     12 #>  2 15-19 Female  1993      6 #>  3 15-19 Female  1994      9 #>  4 15-19 Female  1995      6 #>  5 15-19 Female  1996      3 #>  6 15-19 Female  1997      9 #>  7 15-19 Female  1998      3 #>  8 15-19 Female  1999      6 #>  9 15-19 Female  2000      9 #> 10 15-19 Female  2001      6 #> # ℹ 650 more rows nz_population #> # A tibble: 660 × 4 #>    age   sex     time     py #>    <fct> <chr>  <int>  <dbl> #>  1 15-19 Female  1992 139500 #>  2 15-19 Female  1993 135510 #>  3 15-19 Female  1994 133010 #>  4 15-19 Female  1995 131960 #>  5 15-19 Female  1996 132490 #>  6 15-19 Female  1997 132590 #>  7 15-19 Female  1998 133050 #>  8 15-19 Female  1999 133210 #>  9 15-19 Female  2000 134360 #> 10 15-19 Female  2001 136360 #> # ℹ 650 more rows summary(nz_population$py) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   68470  130178  145890  151497  160290  434780 summary(nz_divorces$nevent) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>     0.0   282.0   769.5   827.7  1329.0  2079.0"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"rates-in-a-single-period-both-sexes-combined","dir":"Articles","previous_headings":"","what":"Rates in a single period, both sexes combined","title":"Divorces in New Zealand","text":"start relatively simple estimating age-specific rates single period, distinguishing females males. first step, create two new datasets containing data 2020. use smooth_age() function smooth observed across age. call smooth_age(), parameter nevent_df specifies data frame numbers events, parameter py_df specifies data frame person years exposure. parameters age_width_df age_min provide information age groups. nz_age_width_df existing data frame BayesRates package gives width age group. told smooth_age() calculate separate rates females males, , fitting, aggregates events person-years across sexes. summary model specification can obtained printing return value smooth_age(). number events modeled Poisson distribution mean equal underlying rate multiplied person-years exposure. logarithm underlying rate equals age effect, modeled spline model. model age effect Spline(). value agevar \"age\", indicating variable information age groups called \"age\". value byvar empty, indicating fit single model, within everyone belonging group. value ndraw 1000, indicating number posterior draws 1000, default. use components() function extract model-based estimates rates disaggregated age. components() returns data frame. data frame, age.mid gives middle point age group (helpful plotting); .fitted gives point estimate rate; .lower .upper give lower upper bounds credible interval rate (95% credible interval default); .probability gives list containing posterior draws rate. components() can also used extract model-based estimates age effects: Function augment() returns original data plus model-based estimates rates. Since model distinguish sexes, values ‘.fitted’, ‘.lower’, ‘.upper’ ‘.probability’ females males age. plot model-based estimates rates (including point estimates credible intervals) observed rates (blue), separately sex.  Function total_rate() sums across ages give total rates.","code":"nz_divorce_2020 <- nz_divorces |>   filter(time == 2020) |>   select(-time)  nz_popn_2020 <- nz_population |>   filter(time == 2020) |>   select(-time) res_age <- smooth_age(nevent_df = nz_divorce_2020,                       py_df = nz_popn_2020,                       age_width_df = nz_age_width_df,                       age_min = 15) head(nz_age_width_df) #> # A tibble: 6 × 2 #>   age   width #>   <fct> <dbl> #> 1 15-19     5 #> 2 20-24     5 #> 3 25-29     5 #> 4 30-34     5 #> 5 35-39     5 #> 6 40-44     5 res_age #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect #>  age_effect ~ Spline() #>  #>    agevar: age #>     byvar: <none> #>    n_draw: 1000 components(res_age, what = \"rates\") #> # A tibble: 11 × 6 #>    age   age.mid   .fitted    .lower    .upper .probability  #>    <fct>   <dbl>     <dbl>     <dbl>     <dbl> <list>        #>  1 15-19    17.5 0.0000201 0.0000106 0.0000388 <dbl [1,000]> #>  2 20-24    22.5 0.000495  0.000434  0.000564  <dbl [1,000]> #>  3 25-29    27.5 0.00266   0.00253   0.00280   <dbl [1,000]> #>  4 30-34    32.5 0.00523   0.00504   0.00542   <dbl [1,000]> #>  5 35-39    37.5 0.00629   0.00610   0.00651   <dbl [1,000]> #>  6 40-44    42.5 0.00702   0.00684   0.00722   <dbl [1,000]> #>  7 45-49    47.5 0.00724   0.00702   0.00748   <dbl [1,000]> #>  8 50-54    52.5 0.00638   0.00618   0.00658   <dbl [1,000]> #>  9 55-59    57.5 0.00495   0.00475   0.00513   <dbl [1,000]> #> 10 60-64    62.5 0.00326   0.00307   0.00346   <dbl [1,000]> #> 11 65+      72.5 0.00121   0.00114   0.00130   <dbl [1,000]> components(res_age, what = \"age_effect\") #> # A tibble: 11 × 6 #>    age   age.mid .fitted .lower .upper .probability  #>    <fct>   <dbl>   <dbl>  <dbl>  <dbl> <list>        #>  1 15-19    17.5  -4.69  -5.27  -4.10  <dbl [1,000]> #>  2 20-24    22.5  -1.49  -1.60  -1.37  <dbl [1,000]> #>  3 25-29    27.5   0.195  0.109  0.275 <dbl [1,000]> #>  4 30-34    32.5   0.871  0.799  0.942 <dbl [1,000]> #>  5 35-39    37.5   1.06   0.988  1.13  <dbl [1,000]> #>  6 40-44    42.5   1.16   1.10   1.24  <dbl [1,000]> #>  7 45-49    47.5   1.20   1.13   1.27  <dbl [1,000]> #>  8 50-54    52.5   1.07   1.00   1.14  <dbl [1,000]> #>  9 55-59    57.5   0.816  0.743  0.886 <dbl [1,000]> #> 10 60-64    62.5   0.400  0.313  0.489 <dbl [1,000]> #> 11 65+      72.5  -0.587 -0.677 -0.502 <dbl [1,000]> rates_age_df <- augment(res_age) rates_age_df #> # A tibble: 22 × 10 #>    age   sex    nevent     py age.mid   .fitted    .lower    .upper .probability #>    <fct> <chr>   <dbl>  <dbl>   <dbl>     <dbl>     <dbl>     <dbl> <list>       #>  1 15-19 Female      0 154480    17.5 0.0000201 0.0000106 0.0000388 <dbl>        #>  2 15-19 Male        0 162910    17.5 0.0000201 0.0000106 0.0000388 <dbl>        #>  3 20-24 Female    111 163370    22.5 0.000495  0.000434  0.000564  <dbl>        #>  4 20-24 Male       54 175600    22.5 0.000495  0.000434  0.000564  <dbl>        #>  5 25-29 Female    639 187000    27.5 0.00266   0.00253   0.00280   <dbl>        #>  6 25-29 Male      429 195310    27.5 0.00266   0.00253   0.00280   <dbl>        #>  7 30-34 Female   1026 187220    32.5 0.00523   0.00504   0.00542   <dbl>        #>  8 30-34 Male      837 186170    32.5 0.00523   0.00504   0.00542   <dbl>        #>  9 35-39 Female   1134 168560    37.5 0.00629   0.00610   0.00651   <dbl>        #> 10 35-39 Male     1032 165880    37.5 0.00629   0.00610   0.00651   <dbl>        #> # ℹ 12 more rows #> # ℹ 1 more variable: .observed <dbl> ggplot(rates_age_df,        aes(x = age.mid, ymin = .lower, y = .fitted, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed), col = \"blue\") total_rate(res_age) #> # A tibble: 1 × 5 #>   .fitted .lower .upper .probability  .observed #>     <dbl>  <dbl>  <dbl> <list>            <dbl> #> 1   0.236  0.232  0.239 <dbl [1,000]>     0.236"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"rates-in-a-single-period-separating-sexes","dir":"Articles","previous_headings":"","what":"Rates in a single period, separating sexes","title":"Divorces in New Zealand","text":"next fit separate model sex. , set argument byvar smooth_age() \"sex\". rates returned augment() now distinguish sexes Graphing results shows model now recognizes female-male differences age patterns.  Function total_rate() now produces separate results females males.","code":"res_age_bysex <- smooth_age(nevent_df = nz_divorce_2020,                             py_df = nz_popn_2020,                             age_width_df = nz_age_width_df,                             age_min = 15,                             byvar = \"sex\") res_age_bysex #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect #>  age_effect ~ Spline() #>  #>    agevar: age #>     byvar: sex #>    n_draw: 1000 rates_age_bysex_df <- augment(res_age_bysex) rates_age_bysex_df #> # A tibble: 22 × 10 #>    age   sex    nevent     py age.mid   .fitted    .lower    .upper .probability #>    <fct> <chr>   <dbl>  <dbl>   <dbl>     <dbl>     <dbl>     <dbl> <list>       #>  1 15-19 Female      0 154480    17.5 0.0000364 0.0000189 0.0000682 <dbl>        #>  2 15-19 Male        0 162910    17.5 0.0000220 0.0000111 0.0000413 <dbl>        #>  3 20-24 Female    111 163370    22.5 0.000674  0.000568  0.000787  <dbl>        #>  4 20-24 Male       54 175600    22.5 0.000326  0.000266  0.000409  <dbl>        #>  5 25-29 Female    639 187000    27.5 0.00322   0.00301   0.00345   <dbl>        #>  6 25-29 Male      429 195310    27.5 0.00204   0.00189   0.00221   <dbl>        #>  7 30-34 Female   1026 187220    32.5 0.00578   0.00553   0.00607   <dbl>        #>  8 30-34 Male      837 186170    32.5 0.00472   0.00449   0.00496   <dbl>        #>  9 35-39 Female   1134 168560    37.5 0.00653   0.00622   0.00684   <dbl>        #> 10 35-39 Male     1032 165880    37.5 0.00609   0.00578   0.00640   <dbl>        #> # ℹ 12 more rows #> # ℹ 1 more variable: .observed <dbl> ggplot(rates_age_bysex_df,        aes(x = age.mid, ymin = .lower, y = .fitted, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed), col = \"blue\") total_rate(res_age_bysex) #> # A tibble: 2 × 6 #>   sex    .fitted .lower .upper .probability  .observed #>   <chr>    <dbl>  <dbl>  <dbl> <list>            <dbl> #> 1 Female   0.231  0.227  0.237 <dbl [1,000]>     0.232 #> 2 Male     0.242  0.237  0.248 <dbl [1,000]>     0.242"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"alternative-specifications-of-age-effect","dir":"Articles","previous_headings":"","what":"Alternative specifications of age effect","title":"Divorces in New Zealand","text":"spec_age argument smooth_age() specifies prior model applied age effects. default value spec_age Spline(). section experiment alternative values.","code":""},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"modifying-the-spline-model-for-age-effects","dir":"Articles","previous_headings":"Alternative specifications of age effect","what":"Modifying the spline model for age effects","title":"Divorces in New Zealand","text":"spec_age set Spline(), age effects modelled using penalised spline, degrees freedom equal max(ceiling(0.7 * n), 4), n number age groups. data, n equals 11, degrees freedom 8. Reducing degrees freedom used within Spline() may lead smoother age effects. set degrees freedom 5, graph results.  lower degrees freedom indeed increase smoothing, modelled estimates away direct estimates.","code":"res_age_bysex_5df <- smooth_age(nevent_df = nz_divorce_2020,                                 py_df = nz_popn_2020,                                 age_width_df = nz_age_width_df,                                 age_min = 15,                                 byvar = \"sex\",                                 spec_age = Spline(df = 5))  rates_age_bysex_5df <- augment(res_age_bysex_5df)  ggplot(rates_age_bysex_5df,         aes(x = age.mid, ymin = .lower, y = .fitted, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed), col = \"blue\")"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"second-order-random-walk-model-for-age","dir":"Articles","previous_headings":"Alternative specifications of age effect","what":"Second-order random walk model for age","title":"Divorces in New Zealand","text":"can also use second order random walk model smooth observed rates across age sex.","code":"res_age_bysex_rw <- smooth_age(nevent_df = nz_divorce_2020,                                py_df = nz_popn_2020,                                age_width_df = nz_age_width_df,                                age_min = 15,                                byvar = \"sex\",                                spec_age = RW2())  rates_age_bysex_rw <- augment(res_age_bysex_rw)  ggplot(rates_age_bysex_rw,        aes(x = age.mid, ymin = .lower, y = .fitted, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed), col = \"blue\")"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"smoothing-over-age-and-time","dir":"Articles","previous_headings":"","what":"Smoothing over age and time","title":"Divorces in New Zealand","text":"now return full dataset, apply function smooth_agetime(), simultaneously smooths age time.","code":""},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"fixed-age-pattern","dir":"Articles","previous_headings":"Smoothing over age and time","what":"Fixed age pattern","title":"Divorces in New Zealand","text":"first model, asssume age-patterns constant time. set parameter spec_time TimeFixed(). model outputs now time dimension. graph results period 1992–2021, see systematic differences modelled direct estimates.  results suggest may need allow age-pattern vary time.","code":"res_agetime_fix <- smooth_agetime(nevent_df = nz_divorces,                                   py_df = nz_population,                                   age_width_df = nz_age_width_df,                                   age_min = 15,                                   byvar = \"sex\",                           spec_time = TimeFixed()) res_agetime_fix #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect + time_effect #>  age_effect ~ Spline() #> time_effect ~ TimeFixed() #>  #>    agevar: age #>   timevar: time #>     byvar: sex #>    n_draw: 1000 rates_agetime_fix <- augment(res_agetime_fix) rates_agetime_fix #> # A tibble: 660 × 11 #>    age   sex     time nevent     py age.mid .fitted  .lower  .upper .probability #>    <fct> <chr>  <int>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <list>       #>  1 15-19 Female  1992     12 139500    17.5 3.56e-5 3.03e-5 4.21e-5 <dbl>        #>  2 15-19 Female  1993      6 135510    17.5 3.53e-5 3.02e-5 4.15e-5 <dbl>        #>  3 15-19 Female  1994      9 133010    17.5 3.47e-5 2.97e-5 4.08e-5 <dbl>        #>  4 15-19 Female  1995      6 131960    17.5 3.52e-5 3.01e-5 4.13e-5 <dbl>        #>  5 15-19 Female  1996      3 132490    17.5 3.59e-5 3.06e-5 4.20e-5 <dbl>        #>  6 15-19 Female  1997      9 132590    17.5 3.43e-5 2.95e-5 4.04e-5 <dbl>        #>  7 15-19 Female  1998      3 133050    17.5 3.50e-5 2.98e-5 4.11e-5 <dbl>        #>  8 15-19 Female  1999      6 133210    17.5 3.41e-5 2.91e-5 4.00e-5 <dbl>        #>  9 15-19 Female  2000      9 134360    17.5 3.31e-5 2.82e-5 3.88e-5 <dbl>        #> 10 15-19 Female  2001      6 136360    17.5 3.28e-5 2.82e-5 3.88e-5 <dbl>        #> # ℹ 650 more rows #> # ℹ 1 more variable: .observed <dbl> ggplot(rates_agetime_fix, aes(x = age.mid)) +   facet_wrap(vars(time)) +   geom_ribbon(aes(ymin = .lower, ymax = .upper, fill = sex),               alpha = 0.6) +   geom_line(aes(y = .fitted, color = sex)) +   geom_point(aes(y = .observed, color = sex),              size = 0.5)"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig1_nz.html","id":"time-varying-age-pattern","dir":"Articles","previous_headings":"Smoothing over age and time","what":"Time-varying age pattern","title":"Divorces in New Zealand","text":"allow age-pattern vary time, set spec_time TimeVarying(), fact default. TimeVarying() model, age group follows different random walk, random walks neighbouring age groups highly correlated random walks distant age groups. revised model, systematic differences modelled direct estimates disappear.  Using components() function, can extract age age-time effects. age effect average age pattern whole period.  age-time effect shows departures average effect period  age-time effects rotate anti-clockwise direction. implies overall shellage-pattern become skewed towards older ages time. Finally, calculate time-varying total rates.","code":"res_agetime_vary <- smooth_agetime(nevent_df = nz_divorces,                                    py_df = nz_population,                                    age_width_df = nz_age_width_df,                                    age_min = 15,                                    byvar = \"sex\") res_agetime_vary #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect + time_effect #>  age_effect ~ Spline() #> time_effect ~ TimeVarying() #>  #>    agevar: age #>   timevar: time #>     byvar: sex #>    n_draw: 1000 rates_agetime_vary <- augment(res_agetime_vary)  ggplot(rates_agetime_vary, aes(x = age.mid)) +   facet_wrap(vars(time)) +   geom_ribbon(aes(ymin = .lower, ymax = .upper, fill = sex),               alpha = 0.6) +   geom_line(aes(y = .fitted, color = sex)) +   geom_point(aes(y = .observed, color = sex),              size = 0.5) age_effect <- components(res_agetime_vary, what = \"age_effect\")  ggplot(age_effect,        aes(x = age.mid, ymin = .lower, y = .fitted, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() time_effect <- components(res_agetime_vary, what = \"time_effect\")   ggplot(time_effect, aes(x = age.mid)) +   facet_wrap(vars(time)) +   geom_ribbon(aes(ymin = .lower, ymax = .upper, fill = sex),               alpha = 0.6) +   geom_line(aes(y = .fitted, color = sex)) total_varying <- total_rate(res_agetime_vary)  ggplot(total_varying,         aes(x = time, y = .fitted, ymin = .lower, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed), col = \"blue\")"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Divorces in China","text":"vignette, use BayesRates calculate smoothed age-specific divorce rates China. input data come household surveys, sample sizes small.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"packages","dir":"Articles","previous_headings":"Introduction","what":"Packages","title":"Divorces in China","text":"load BayesRates two tidyverse packages dplyr ggplot.","code":"library(BayesRates) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"data","dir":"Articles","previous_headings":"Introduction","what":"Data","title":"Divorces in China","text":"data divorces cn_divorces, data frame part BayesRates package. `cn_divorces four columns: age: integer vector values 15,…,64; sex: character vector values “Female” “Male”; time: integer vector values 1980,…,2018; nevent: numeric vector number divorces. cn_population contains data population, also part BayesRates. columsn : age: integer vector values 15,…,64; sex: character vector values “Female” “Male”; time: integer vector values 1980,…,2018; py: numeric vector person-years exposure. person-years exposure quite small, 70 percent divorce counts equal zero.","code":"cn_divorces #> # A tibble: 3,900 × 4 #>      age sex     time nevent #>    <int> <chr>  <int>  <int> #>  1    15 Female  1980      0 #>  2    15 Female  1981      0 #>  3    15 Female  1982      0 #>  4    15 Female  1983      0 #>  5    15 Female  1984      0 #>  6    15 Female  1985      0 #>  7    15 Female  1986      0 #>  8    15 Female  1987      0 #>  9    15 Female  1988      0 #> 10    15 Female  1989      0 #> # ℹ 3,890 more rows cn_population #> # A tibble: 3,900 × 4 #>      age sex     time    py #>    <int> <chr>  <int> <dbl> #>  1    15 Female  1980  489. #>  2    15 Female  1981  494. #>  3    15 Female  1982  462. #>  4    15 Female  1983  496. #>  5    15 Female  1984  496. #>  6    15 Female  1985  514. #>  7    15 Female  1986  535. #>  8    15 Female  1987  458. #>  9    15 Female  1988  434. #> 10    15 Female  1989  468. #> # ℹ 3,890 more rows summary(cn_population$py) #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>   0.0833 215.3333 344.3333 325.5283 431.1667 744.0000 summary(cn_divorces$nevent) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.000   0.000   0.000   0.461   1.000   8.000 mean(cn_divorces$nevent == 0) #> [1] 0.7187179"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"fitting-a-model","dir":"Articles","previous_headings":"","what":"Fitting a model","title":"Divorces in China","text":"use function smooth_agetime() smooth observed rates across age time, separately sex. nevent_df data frame numbers events py_df data frame person years exposure spec_time model used age-time interactions. Given limited data, use simple model overall level changes time age-pattern remains constant. default, smooth_agetime() models age effects (opposed age-time interactions) using function Spline(), uses penalised splines smooth age groups. degree smoothness Spline() can controlled via function df. summary model can obtained printing model object. number events modeled Poisson distribution mean equal underlying rate multiplied person-years exposure logarithm underlying rate equals age effect plus time effect model age effect Spline() model time effect TimeFixed() agevar \"age\". BayesRates assuming variable called \"age\" identifies age groups timevar \"time\". BayesRates assuming variable called \"time\" identifies time periods byvar \"sex\" model fitted separately sex ndraw 1000. default functions augment() components() (see ) produce 1000 draws posterior distribution.","code":"res <- smooth_agetime(nevent_df = cn_divorces,                       py_df = cn_population,                       spec_time = TimeFixed(),                       byvar = \"sex\") res #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect + time_effect #>  age_effect ~ Spline() #> time_effect ~ TimeFixed() #>  #>    agevar: age #>   timevar: time #>     byvar: sex #>    n_draw: 1000"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"extracting-results","dir":"Articles","previous_headings":"","what":"Extracting results","title":"Divorces in China","text":"Function augment() returns data frame combines input data model-based estimates rates. return value augment() age.mid middle point single year age; .fitted point estimate rat .lower, .upper lower upper bounds 95% credible intervals rates; .probability list containing posterior draws rate. extract graph rates females.","code":"rates <- augment(res) rates #> # A tibble: 3,900 × 11 #>      age sex     time nevent    py age.mid  .fitted  .lower  .upper .probability #>    <int> <chr>  <int>  <int> <dbl>   <dbl>    <dbl>   <dbl>   <dbl> <list>       #>  1    15 Female  1980      0  489.    15.5  9.16e-6 2.53e-6 2.91e-5 <dbl>        #>  2    15 Female  1981      0  494.    15.5  9.50e-6 2.78e-6 2.88e-5 <dbl>        #>  3    15 Female  1982      0  462.    15.5  9.80e-6 3.23e-6 3.07e-5 <dbl>        #>  4    15 Female  1983      0  496.    15.5  1.15e-5 3.55e-6 3.43e-5 <dbl>        #>  5    15 Female  1984      0  496.    15.5  1.14e-5 3.73e-6 3.37e-5 <dbl>        #>  6    15 Female  1985      0  514.    15.5  1.22e-5 3.76e-6 3.60e-5 <dbl>        #>  7    15 Female  1986      0  535.    15.5  1.25e-5 3.86e-6 3.49e-5 <dbl>        #>  8    15 Female  1987      0  458.    15.5  1.34e-5 4.04e-6 3.98e-5 <dbl>        #>  9    15 Female  1988      0  434.    15.5  1.61e-5 5.36e-6 4.78e-5 <dbl>        #> 10    15 Female  1989      0  468.    15.5  1.81e-5 5.86e-6 5.45e-5 <dbl>        #> # ℹ 3,890 more rows #> # ℹ 1 more variable: .observed <dbl> rates_female <- rates |>   filter(sex == \"Female\")    ggplot(rates_female, aes(x = age.mid)) +   facet_wrap(vars(time)) +   geom_ribbon(aes(ymin = .lower, ymax = .upper),               fill = \"salmon\") +   geom_line(aes(y = .fitted),             color = \"darkred\") +   geom_point(aes(y = .observed),              color = \"blue\",          size = 0.2)"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"total-rates","dir":"Articles","previous_headings":"","what":"Total rates","title":"Divorces in China","text":"Function total_rate() sums across age groups give total divorce rate. plot model-based (orange) direct (blue) estimates total divorce rate China.","code":"total_rate <- total_rate(res) total_rate #> # A tibble: 78 × 7 #>    sex     time .fitted  .lower .upper .probability  .observed #>    <chr>  <int>   <dbl>   <dbl>  <dbl> <list>            <dbl> #>  1 Female  1980  0.0122 0.00629 0.0223 <dbl [1,000]>   0.00951 #>  2 Female  1981  0.0123 0.00696 0.0209 <dbl [1,000]>   0.00992 #>  3 Female  1982  0.0130 0.00781 0.0214 <dbl [1,000]>   0.00497 #>  4 Female  1983  0.0153 0.00957 0.0243 <dbl [1,000]>   0.0213  #>  5 Female  1984  0.0149 0.00955 0.0234 <dbl [1,000]>   0.00810 #>  6 Female  1985  0.0164 0.0104  0.0253 <dbl [1,000]>   0.0225  #>  7 Female  1986  0.0162 0.0104  0.0250 <dbl [1,000]>   0.0108  #>  8 Female  1987  0.0175 0.0114  0.0262 <dbl [1,000]>   0.0105  #>  9 Female  1988  0.0212 0.0144  0.0314 <dbl [1,000]>   0.0264  #> 10 Female  1989  0.0235 0.0162  0.0342 <dbl [1,000]>   0.0121  #> # ℹ 68 more rows ggplot(total_rate,         aes(x = time, y = .fitted, ymin = .lower, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed),              col = \"blue\")"},{"path":"https://junnizhang.github.io/BayesRates/articles/vig2_cn.html","id":"imputing-missing-values","dir":"Articles","previous_headings":"","what":"Imputing missing values","title":"Divorces in China","text":"common, demographic data, missing values years. BayesRates automatically imputes values years missing data. illustrate, first create datasets data available every fifth year. use smooth_agetime() smooth rates across age time, separately sex. use augment() function, obtain estimates observed years. However, use components() extract model-based estimates rates, also obtain estimates gap years.  total_rate() also produces estimates years, including ones without data. Credible intervals wider years without data.","code":"cn_divorces_5 <- cn_divorces |>   filter(time %in% seq(1980, 2018, 5)) cn_population_5 <- cn_population |>   filter(time %in% seq(1980, 2018, 5)) res_5 <- smooth_agetime(nevent_df = cn_divorces_5,                         py_df = cn_population_5,                         spec_time = TimeFixed(),                         byvar = \"sex\") res_5 #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect + time_effect #>  age_effect ~ Spline() #> time_effect ~ TimeFixed() #>  #>    agevar: age #>   timevar: time #>     byvar: sex #>    n_draw: 1000 rates_5 <- augment(res_5) rates_5 #> # A tibble: 800 × 11 #>      age sex     time nevent    py age.mid  .fitted  .lower  .upper .probability #>    <int> <chr>  <int>  <int> <dbl>   <dbl>    <dbl>   <dbl>   <dbl> <list>       #>  1    15 Female  1980      0  489.    15.5  1.47e-5 2.32e-6 1.10e-4 <dbl>        #>  2    15 Female  1985      0  514.    15.5  2.08e-5 3.28e-6 1.23e-4 <dbl>        #>  3    15 Female  1990      0  385.    15.5  3.28e-5 5.34e-6 1.99e-4 <dbl>        #>  4    15 Female  1995      0  345.    15.5  4.18e-5 7.01e-6 2.43e-4 <dbl>        #>  5    15 Female  2000      0  421.    15.5  5.27e-5 8.61e-6 3.16e-4 <dbl>        #>  6    15 Female  2005      0  744     15.5  6.71e-5 1.11e-5 3.71e-4 <dbl>        #>  7    15 Female  2010      0  421     15.5  9.27e-5 1.53e-5 5.11e-4 <dbl>        #>  8    15 Female  2015      0  262.    15.5  8.55e-5 1.39e-5 4.85e-4 <dbl>        #>  9    15 Male    1980      0  491.    15.5  1.08e-5 1.83e-6 7.58e-5 <dbl>        #> 10    15 Male    1985      0  496.    15.5  2.20e-5 4.32e-6 1.40e-4 <dbl>        #> # ℹ 790 more rows #> # ℹ 1 more variable: .observed <dbl> rates_5_com <- components(res_5, what = \"rates\") rates_5_com #> # A tibble: 3,600 × 8 #>    sex      age age.mid  time   .fitted     .lower   .upper .probability  #>    <chr>  <int>   <dbl> <int>     <dbl>      <dbl>    <dbl> <list>        #>  1 Female    15    15.5  1980 0.0000147 0.00000232 0.000110 <dbl [1,000]> #>  2 Female    15    15.5  1981 0.0000154 0.00000245 0.000115 <dbl [1,000]> #>  3 Female    15    15.5  1982 0.0000174 0.00000251 0.000112 <dbl [1,000]> #>  4 Female    15    15.5  1983 0.0000177 0.00000278 0.000112 <dbl [1,000]> #>  5 Female    15    15.5  1984 0.0000195 0.00000291 0.000123 <dbl [1,000]> #>  6 Female    15    15.5  1985 0.0000208 0.00000328 0.000123 <dbl [1,000]> #>  7 Female    15    15.5  1986 0.0000225 0.00000354 0.000146 <dbl [1,000]> #>  8 Female    15    15.5  1987 0.0000250 0.00000356 0.000151 <dbl [1,000]> #>  9 Female    15    15.5  1988 0.0000272 0.00000396 0.000164 <dbl [1,000]> #> 10 Female    15    15.5  1989 0.0000299 0.00000470 0.000183 <dbl [1,000]> #> # ℹ 3,590 more rows rates_5_com_female <- rates_5_com |>   filter(sex == \"Female\")     ggplot(rates_5_com_female, aes(x = age.mid)) +   facet_wrap(vars(time)) +   geom_ribbon(aes(ymin = .lower, ymax = .upper),               fill = \"salmon\") +   geom_line(aes(y = .fitted),             color = \"darkred\") total_rate_5 <- total_rate(res_5) ggplot(total_rate_5,         aes(x = time, y = .fitted, ymin = .lower, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line(col = \"darkred\") +   geom_point(aes(y = .observed),              col = \"blue\") #> Warning: Removed 56 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://junnizhang.github.io/BayesRates/articles/vig3_math.html","id":"model-for-single-time-period","dir":"Articles","previous_headings":"","what":"Model for single time period","title":"vig3_math","text":"ya∼Poisson(γawa)\\begin{equation}   y_a \\sim \\text{Poisson}(\\gamma_a w_a) \\end{equation} logγa=βaage\\begin{equation}   \\log \\gamma_a = \\beta_a^{\\text{age}} \\end{equation} Priors age effect βaage\\beta_a^{\\text{age}}: Case 1: Second-Order Random Walk βaage−βa−1age∼N(βa−1age−βa−2age,σage2),=2,⋯,\\begin{equation}   \\beta_a^{\\text{age}} - \\beta_{-1}^{\\text{age}} \\sim \\text{N}\\left(\\beta_{-1}^{\\text{age}} - \\beta_{-2}^{\\text{age}}, \\sigma_{\\text{age}}^2\\right), \\quad = 2, \\cdots, \\end{equation} σage∼N+(0,sage2)\\begin{equation}   \\sigma_{\\text{age}} \\sim \\text{N}^+(0, s_{\\text{age}}^2) \\end{equation} Case 2: Spline 𝛃age=𝐗𝛂αa−αa−1∼N(αa−1−αa−2,σage2)\\begin{align}   \\pmb{\\beta}^{\\text{age}} & = \\pmb{X} \\pmb{\\alpha} \\\\   \\alpha_a - \\alpha_{-1} & \\sim \\text{N}\\left(\\alpha_{-1} - \\alpha_{-2}, \\sigma_{\\text{age}}^2\\right) \\end{align} σage∼N+(0,sage2)\\begin{equation}   \\sigma_{\\text{age}} \\sim \\text{N}^+(0, s_{\\text{age}}^2) \\end{equation}","code":""},{"path":"https://junnizhang.github.io/BayesRates/articles/vig3_math.html","id":"model-for-multiple-time-periods-main-effects","dir":"Articles","previous_headings":"","what":"Model for multiple time periods: Main effects","title":"vig3_math","text":"yat∼Poisson(γatwat)logγat=βaage+βttime\\begin{align}   y_{} & \\sim \\text{Poisson}(\\gamma_{} w_{}) \\\\   \\log \\gamma_{} & = \\beta_a^{\\text{age}} + \\beta_t^{\\text{time}} \\end{align} Priors age effect βaage\\beta_a^{\\text{age}} single-time-period model Prior time effect: βttime∼N(0,σtime2)\\begin{equation}   \\beta_t^{\\text{time}} \\sim \\text{N}(0, \\sigma_{\\text{time}}^2) \\end{equation}","code":""},{"path":"https://junnizhang.github.io/BayesRates/articles/vig3_math.html","id":"model-for-multiple-time-periods-interaction","dir":"Articles","previous_headings":"","what":"Model for multiple time periods: Interaction","title":"vig3_math","text":"yat∼Poisson(γatwat)logγat=βaage+βatage:time\\begin{align}   y_{} & \\sim \\text{Poisson}(\\gamma_{} w_{}) \\\\   \\log \\gamma_{} & = \\beta_a^{\\text{age}} + \\beta_{}^{\\text{age:time}} \\end{align} Priors age effect βaage\\beta_a^{\\text{age}} single-time-period model Prior age-time effect βatage:time\\beta_{}^{\\text{age:time}}: 𝛃tage:time∼N(𝛃t−1age:time,σ2𝚽)\\begin{equation}   \\pmb{\\beta}_t^{\\text{age:time}} \\sim \\text{N}(\\pmb{\\beta}_{t-1}^{\\text{age:time}}, \\sigma^2 \\pmb{\\Phi}) \\end{equation} 𝚽=[1ρρ2…ρT−1ρ1ρ…ρT−2ρ2ρ1…ρT−3⋮⋮⋮⋱⋮ρT−1ρT−2ρT−3…1]\\begin{equation}   \\pmb{\\Phi} = \\begin{bmatrix} 1 & \\rho & \\rho^2 & \\dots & \\rho^{T-1} \\\\                                  \\rho & 1 & \\rho & \\dots & \\rho^{T-2} \\\\                  \\rho^2 & \\rho & 1 & \\dots & \\rho^{T-3} \\\\                  \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\                  \\rho^{T-1} & \\rho^{T-2} & \\rho^{T-3} & \\dots & 1 \\end{bmatrix} \\end{equation}","code":""},{"path":"https://junnizhang.github.io/BayesRates/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Bryant. Author, maintainer. Junni Zhang. Author.","code":""},{"path":"https://junnizhang.github.io/BayesRates/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryant J, Zhang J (2025). BayesRates: Bayesian Smoothing Demographic Rates. R package version 0.2.0, https://junnizhang.github.io/BayesRates/.","code":"@Manual{,   title = {BayesRates: Bayesian Smoothing of Demographic Rates},   author = {John Bryant and Junni Zhang},   year = {2025},   note = {R package version 0.2.0},   url = {https://junnizhang.github.io/BayesRates/}, }"},{"path":"https://junnizhang.github.io/BayesRates/index.html","id":"bayesrates","dir":"","previous_headings":"","what":"Bayesian Smoothing of Demographic Rates","title":"Bayesian Smoothing of Demographic Rates","text":"Using Bayesian methods, smooth demographic rates age time. Internally, calculations done using TMB. BayesRates part larger project extend ProFamy household projection method. Work BayesRates supported funding Chinese Ministry Science Technology.","code":""},{"path":"https://junnizhang.github.io/BayesRates/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Smoothing of Demographic Rates","text":"Install development version BayesRates GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"junnizhang/BayesRates\")"},{"path":"https://junnizhang.github.io/BayesRates/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Smoothing of Demographic Rates","text":"Smooth Chinese data divorce rates Extract rates Calculate ‘total divorce rate’, plot ","code":"library(BayesRates) library(ggplot2) library(BayesRates) results <- smooth_agetime(nevent_df = cn_divorces,                           py_df = cn_population,                           spec_time = TimeFixed(),                           byvar = \"sex\") results #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect + time_effect #>  age_effect ~ Spline() #> time_effect ~ TimeFixed() #>  #>    agevar: age #>   timevar: time #>     byvar: sex #>    n_draw: 1000 rates <- augment(results) head(rates) #> # A tibble: 6 × 11 #>     age sex     time nevent    py age.mid   .fitted  .lower  .upper .probability #>   <int> <chr>  <int>  <int> <dbl>   <dbl>     <dbl>   <dbl>   <dbl> <list>       #> 1    15 Female  1980      0  489.    15.5   9.23e-6 2.53e-6 3.58e-5 <dbl>        #> 2    15 Female  1981      0  494.    15.5   9.48e-6 2.66e-6 3.44e-5 <dbl>        #> 3    15 Female  1982      0  462.    15.5   1.00e-5 2.86e-6 3.39e-5 <dbl>        #> 4    15 Female  1983      0  496.    15.5   1.17e-5 3.35e-6 4.03e-5 <dbl>        #> 5    15 Female  1984      0  496.    15.5   1.15e-5 3.31e-6 3.90e-5 <dbl>        #> 6    15 Female  1985      0  514.    15.5   1.23e-5 3.92e-6 4.09e-5 <dbl>        #> # ℹ 1 more variable: .observed <dbl> total_divorce_rate <- total_rate(results) ggplot(total_divorce_rate,        aes(x = time, y = .fitted, ymin = .lower, ymax = .upper)) +   facet_wrap(vars(sex)) +   geom_ribbon(fill = \"salmon\") +   geom_line() +   geom_point(aes(y = .observed), col = \"blue\")"},{"path":"https://junnizhang.github.io/BayesRates/reference/BayesRates-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth demographic rates using Bayesian methods — BayesRates-package","title":"Smooth demographic rates using Bayesian methods — BayesRates-package","text":"Use Bayesian methods smooth demographic rates age (optionally) time. Calculations done internally using package TMB.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/BayesRates-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth demographic rates using Bayesian methods — BayesRates-package","text":"key functions smooth_age() smoothing age smooth_agetime() simultaneously smoothing age time","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/BayesRates-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Smooth demographic rates using Bayesian methods — BayesRates-package","text":"Maintainer: John Bryant john@bayesiandemography.com Authors: Junni Zhang junnizhang@163.com","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/RW2.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a random walk model for the age effect — RW2","title":"Specify a random walk model for the age effect — RW2","text":"Specify second-order random walk model age effect. second-order random walk tends smoother ordinary (first-order) random walk, still flexible enough capture distinctive features age profile modelled.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/RW2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a random walk model for the age effect — RW2","text":"","code":"RW2(scale = 1)"},{"path":"https://junnizhang.github.io/BayesRates/reference/RW2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a random walk model for the age effect — RW2","text":"scale Scale error term. Defaults 1.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/RW2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a random walk model for the age effect — RW2","text":"object class BayesRates_spec_rw2.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/RW2.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify a random walk model for the age effect — RW2","text":"model age effect, log scale, $$(\\beta_a - \\beta_{-1}) - (\\beta_{-1} - \\beta_{-2}) \\sim \\text{N}(0, \\sigma^2)$$ Parameter \\(\\sigma\\) prior $$\\sigma \\sim \\text{N}^+(0, ^2)$$ \\(\\text{N}^+\\) denotes half-normal distribution, value \\(\\) supplied user.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/RW2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a random walk model for the age effect — RW2","text":"","code":"RW2() #> < Object of class \"BayesRates_spec_rw2\" > #>           scale: 1 RW2(scale = 0.1) #> < Object of class \"BayesRates_spec_rw2\" > #>           scale: 0.1"},{"path":"https://junnizhang.github.io/BayesRates/reference/Spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a P-spline model for an age effect — Spline","title":"Specify a P-spline model for an age effect — Spline","text":"Specify P-spline (penalised spline) model age effect. P-spline flexible, favours profiles relatively smooth.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/Spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a P-spline model for an age effect — Spline","text":"","code":"Spline(df = NULL, scale = 1)"},{"path":"https://junnizhang.github.io/BayesRates/reference/Spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a P-spline model for an age effect — Spline","text":"df Degrees freedom spline. default 0.7 times number age groups, 4, whichever higher. scale Scale error term. default 1.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/Spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a P-spline model for an age effect — Spline","text":"object class \"BayesRates_spec_spline\".","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/Spline.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify a P-spline model for an age effect — Spline","text":"model age effect, log scale, $$\\beta = X \\gamma$$ \\(\\beta\\) vector age effects, \\(X\\) matrix holding basis functions spline, df columns, \\(\\gamma\\) vector coefficients, df elements. elements \\(\\gamma\\) assumed follow second order random walk, $$(\\gamma_a - \\gamma_{-1}) - (\\gamma_{-1} - \\gamma_{-2}) \\sim \\text{N}(0, \\sigma^2)$$ Parameter \\(\\sigma\\) prior $$\\sigma \\sim \\text{N}^+(0, ^2)$$ \\(\\text{N}^+\\) denotes half-normal distribution, value \\(\\) supplied user.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/Spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a P-spline model for an age effect — Spline","text":"","code":"Spline() #> < Object of class \"BayesRates_spec_spline\" > #>           scale: 1 Spline(df = 10) #> < Object of class \"BayesRates_spec_spline\" > #>              df: 10 #>           scale: 1"},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify time trends: age pattern fixed — TimeFixed","title":"Specify time trends: age pattern fixed — TimeFixed","text":"Specify time trends shape age profile assumed constant time, even though level may change. level assumed follow random walk.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify time trends: age pattern fixed — TimeFixed","text":"","code":"TimeFixed(scale = 1)"},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify time trends: age pattern fixed — TimeFixed","text":"scale Scale standard deviation error term. Default 1.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify time trends: age pattern fixed — TimeFixed","text":"object class \"BayesRates_spec_timefixed\".","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeFixed.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify time trends: age pattern fixed — TimeFixed","text":"model underlying TimeFixed(), $$\\eta_{} = \\alpha_a + \\beta_t$$ \\(\\eta_{}\\) denotes (log) rates age group \\(\\) period \\(t\\), \\(\\alpha_a\\) age effect, \\(\\beta_t\\) time effect, time effect modelled $$\\beta_t = \\beta_{t-1} + \\epsilon_t$$ \\(\\epsilon\\) normally-distributed error term mean \\(0\\) standard deviation \\(\\sigma\\). Standard deviation \\(\\sigma\\) prior $$\\sigma \\sim \\text{N}^+(0, ^2)$$ \\(\\text{N}^+\\) denotes half-normal distribution, value scale parameter \\(\\) supplied user.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify time trends: age pattern fixed — TimeFixed","text":"","code":"TimeFixed() #> < Object of class \"BayesRates_spec_timefixed\" > #>           scale: 1 TimeFixed(scale = 2) #> < Object of class \"BayesRates_spec_timefixed\" > #>           scale: 2"},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeVarying.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify time trends: age pattern changes — TimeVarying","title":"Specify time trends: age pattern changes — TimeVarying","text":"Specify time trends age pattern allowed vary smoothly time.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeVarying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify time trends: age pattern changes — TimeVarying","text":"","code":"TimeVarying(scale = 1)"},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeVarying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify time trends: age pattern changes — TimeVarying","text":"scale Scale standard deviation error term. Default 1.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeVarying.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify time trends: age pattern changes — TimeVarying","text":"object class \"BayesRates_spec_timevarying\".","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeVarying.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify time trends: age pattern changes — TimeVarying","text":"model underlying TimeVarying(), $$\\eta_{} = \\alpha_a + \\beta_{}$$ \\(\\eta_{}\\) denotes (log) rates age group \\(\\) period \\(t\\), \\(\\alpha_a\\) age effect, \\(\\beta_{}\\) age-time interaction, age-time interaction modelled $$\\beta_t = \\beta_{t-1} + \\epsilon_t$$ \\(\\beta_t\\) vector age-specific terms, \\(\\epsilon_t\\) vector drawn multivariate normal mean 0 variance \\(V\\) Element \\(v_{ij}\\) \\(V\\) form $$v_{ij} = \\rho^{|-j|}\\sigma^2$$ Correlation coefficient \\(\\rho\\) Beta(2,2) prior. Standard deviation \\(\\sigma\\) prior $$\\sigma \\sim \\text{N}^+(0, ^2)$$ \\(\\text{N}^+\\) denotes half-normal distribution, value scale parameter \\(\\) supplied user.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/TimeVarying.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify time trends: age pattern changes — TimeVarying","text":"","code":"TimeVarying() #> < Object of class \"BayesRates_spec_timevarying\" > TimeVarying(scale = 0.1) #> < Object of class \"BayesRates_spec_timevarying\" >"},{"path":"https://junnizhang.github.io/BayesRates/reference/augment.BayesRates_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","title":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","text":"Extract estimated rates object created call smooth_age() smooth_agetime(), combine original data.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/augment.BayesRates_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","text":"","code":"# S3 method for class 'BayesRates_results' augment(x, interval = 0.95, ...)"},{"path":"https://junnizhang.github.io/BayesRates/reference/augment.BayesRates_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","text":"x \"BayesRates_results\" object created calling function smooth_age() smooth_agetime(). interval Width credible intervals. number 0 1. Default 0.95. ... currently used.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/augment.BayesRates_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","text":"tibble, constructed merging nevent_df py_df, creating six new columns: <agevar>.mid: Midpoints age groups (useful plotting.) .fitted: Point estimates (posterior medians) rates. .lower, .upper: Lower upper bounds credible intervals specified interval. .probability: list column draws posterior distribution. .observed: Direct estimates rates.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/augment.BayesRates_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","text":"addition modelled rates, augment() also displayed 'direct' estimates rates. Direct estimates estimates obtained dividing events populations risk, smoothing.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/augment.BayesRates_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain estimates of rates, combined with original data — augment.BayesRates_results","text":"","code":"results <- smooth_agetime(nevent_df = nz_divorces,                           py_df = nz_population,                           age_width_df = nz_age_width_df,                           age_min = 15) augment(results) #> # A tibble: 660 × 11 #>    age    time sex    nevent     py age.mid .fitted  .lower  .upper .probability #>    <fct> <int> <chr>   <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <list>       #>  1 15-19  1992 Female     12 139500    17.5 2.97e-5 2.46e-5 3.61e-5 <dbl>        #>  2 15-19  1992 Male        0 140660    17.5 2.97e-5 2.46e-5 3.61e-5 <dbl>        #>  3 15-19  1993 Female      6 135510    17.5 2.84e-5 2.31e-5 3.43e-5 <dbl>        #>  4 15-19  1993 Male        0 137470    17.5 2.84e-5 2.31e-5 3.43e-5 <dbl>        #>  5 15-19  1994 Female      9 133010    17.5 2.69e-5 2.23e-5 3.24e-5 <dbl>        #>  6 15-19  1994 Male        0 135920    17.5 2.69e-5 2.23e-5 3.24e-5 <dbl>        #>  7 15-19  1995 Female      6 131960    17.5 2.70e-5 2.25e-5 3.27e-5 <dbl>        #>  8 15-19  1995 Male        0 136430    17.5 2.70e-5 2.25e-5 3.27e-5 <dbl>        #>  9 15-19  1996 Male        0 138000    17.5 2.63e-5 2.20e-5 3.17e-5 <dbl>        #> 10 15-19  1996 Female      3 132490    17.5 2.63e-5 2.20e-5 3.17e-5 <dbl>        #> # ℹ 650 more rows #> # ℹ 1 more variable: .observed <dbl>"},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_divorces.html","id":null,"dir":"Reference","previous_headings":"","what":"Divorces in China — cn_divorces","title":"Divorces in China — cn_divorces","text":"Counts divorces among respondents China Family Panel Studies survey, 1980-2018","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_divorces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divorces in China — cn_divorces","text":"","code":"cn_divorces"},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_divorces.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Divorces in China — cn_divorces","text":"data frame following variables: age: Age, single-year age groups. sex: \"Female\" \"Male\". time: Calendar year. nevent: Numbers divorces year.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_divorces.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Divorces in China — cn_divorces","text":"Tabulation China Family Panel Studies (CFPS) survey data.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Adult population in China — cn_population","title":"Adult population in China — cn_population","text":"Person-years lived respondents China Family Panel Studies survey, 1980-2018.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adult population in China — cn_population","text":"","code":"cn_population"},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_population.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adult population in China — cn_population","text":"data frame following variables: age: Age, single-year age groups. sex: \"Female\" \"Male\". time: Calendar year. py: Person-years lived.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/cn_population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adult population in China — cn_population","text":"Tabulation China Family Panel Studies (CFPS) survey data.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/components.BayesRates_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract components from a results object — components.BayesRates_results","title":"Extract components from a results object — components.BayesRates_results","text":"Extract components object created call smooth_age() smooth_agetime().","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/components.BayesRates_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract components from a results object — components.BayesRates_results","text":"","code":"# S3 method for class 'BayesRates_results' components(object, what = NULL, interval = 0.95, ...)"},{"path":"https://junnizhang.github.io/BayesRates/reference/components.BayesRates_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract components from a results object — components.BayesRates_results","text":"object results object. Components extracted. value supplied, available components extracted. interval Width credible intervals. number 0 1. Default 0.95. ... currently used.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/components.BayesRates_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract components from a results object — components.BayesRates_results","text":"named list tibbles, , single value, single tibble. tibble contains classification variables, present .fitted Point estimates (posterior medians). .lower, .upper Lower upper bounds credible intervals. .probability. list column draws posterior distribution. age variable comes versions: original version one .mid suffix. .mid version useful plotting.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/components.BayesRates_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract components from a results object — components.BayesRates_results","text":"object created call smooth_age(), components can extracted : \"rates\" Age-specific rates. \"intercept\" Model intercept. \"age_effect\" Age main effect. \"age_hyper\" Hyper-parameters age main effect. object created call smooth_agetime(), components can extracted \"rates\" Age-time-specific rates \"intercept\" Model intercept. \"age_effect\" Age main effect. \"time_effect\" Time main effect age-time interaction. \"age_hyper\" Hyper-parametres age main effect. \"time_hyper\" Hyper-parameters time main effect age-time interaction.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/components.BayesRates_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract components from a results object — components.BayesRates_results","text":"","code":"## run model results <- smooth_age(nevent_df = nz_divorces_2020,                       py_df = nz_population_2020,                       age_width_df = nz_age_width_df,                       age_min = 15)  ## extract all components components(results) #> $rates #> # A tibble: 11 × 6 #>    age   age.mid   .fitted    .lower    .upper .probability  #>    <fct>   <dbl>     <dbl>     <dbl>     <dbl> <list>        #>  1 15-19    17.5 0.0000200 0.0000106 0.0000381 <dbl [1,000]> #>  2 20-24    22.5 0.000493  0.000435  0.000560  <dbl [1,000]> #>  3 25-29    27.5 0.00265   0.00254   0.00279   <dbl [1,000]> #>  4 30-34    32.5 0.00522   0.00503   0.00542   <dbl [1,000]> #>  5 35-39    37.5 0.00629   0.00606   0.00652   <dbl [1,000]> #>  6 40-44    42.5 0.00702   0.00682   0.00724   <dbl [1,000]> #>  7 45-49    47.5 0.00724   0.00702   0.00750   <dbl [1,000]> #>  8 50-54    52.5 0.00638   0.00618   0.00657   <dbl [1,000]> #>  9 55-59    57.5 0.00496   0.00476   0.00514   <dbl [1,000]> #> 10 60-64    62.5 0.00327   0.00308   0.00348   <dbl [1,000]> #> 11 65+      72.5 0.00121   0.00114   0.00130   <dbl [1,000]> #>  #> $intercept #> # A tibble: 1 × 4 #>   .fitted .lower .upper .probability  #>     <dbl>  <dbl>  <dbl> <list>        #> 1   -6.12  -6.19  -6.06 <dbl [1,000]> #>  #> $age_effect #> # A tibble: 11 × 6 #>    age   age.mid .fitted .lower .upper .probability  #>    <fct>   <dbl>   <dbl>  <dbl>  <dbl> <list>        #>  1 15-19    17.5  -4.70  -5.26  -4.11  <dbl [1,000]> #>  2 20-24    22.5  -1.49  -1.61  -1.39  <dbl [1,000]> #>  3 25-29    27.5   0.193  0.115  0.278 <dbl [1,000]> #>  4 30-34    32.5   0.870  0.799  0.939 <dbl [1,000]> #>  5 35-39    37.5   1.06   0.986  1.13  <dbl [1,000]> #>  6 40-44    42.5   1.17   1.10   1.24  <dbl [1,000]> #>  7 45-49    47.5   1.20   1.12   1.27  <dbl [1,000]> #>  8 50-54    52.5   1.07   1.00   1.13  <dbl [1,000]> #>  9 55-59    57.5   0.819  0.748  0.884 <dbl [1,000]> #> 10 60-64    62.5   0.401  0.313  0.490 <dbl [1,000]> #> 11 65+      72.5  -0.585 -0.674 -0.504 <dbl [1,000]> #>  #> $age_hyper #> # A tibble: 2 × 5 #>   hyper .fitted .lower .upper .probability  #>   <chr>   <dbl>  <dbl>  <dbl> <list>        #> 1 sd       2.84  1.90    4.18 <dbl [1,000]> #> 2 slope    1.10  0.728   1.48 <dbl [1,000]> #>   ## extract age effect components(results, what = \"age_effect\") #> # A tibble: 11 × 6 #>    age   age.mid .fitted .lower .upper .probability  #>    <fct>   <dbl>   <dbl>  <dbl>  <dbl> <list>        #>  1 15-19    17.5  -4.70  -5.26  -4.11  <dbl [1,000]> #>  2 20-24    22.5  -1.49  -1.61  -1.39  <dbl [1,000]> #>  3 25-29    27.5   0.193  0.115  0.278 <dbl [1,000]> #>  4 30-34    32.5   0.870  0.799  0.939 <dbl [1,000]> #>  5 35-39    37.5   1.06   0.986  1.13  <dbl [1,000]> #>  6 40-44    42.5   1.17   1.10   1.24  <dbl [1,000]> #>  7 45-49    47.5   1.20   1.12   1.27  <dbl [1,000]> #>  8 50-54    52.5   1.07   1.00   1.13  <dbl [1,000]> #>  9 55-59    57.5   0.819  0.748  0.884 <dbl [1,000]> #> 10 60-64    62.5   0.401  0.313  0.490 <dbl [1,000]> #> 11 65+      72.5  -0.585 -0.674 -0.504 <dbl [1,000]>"},{"path":"https://junnizhang.github.io/BayesRates/reference/n_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the number of draws from the posterior distribution — n_draw","title":"Get and set the number of draws from the posterior distribution — n_draw","text":"Query specify number draws posterior distribution generated results object.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/n_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the number of draws from the posterior distribution — n_draw","text":"","code":"n_draw(x)  n_draw(x) <- value  # S3 method for class 'BayesRates_results' n_draw(x) <- value"},{"path":"https://junnizhang.github.io/BayesRates/reference/n_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the number of draws from the posterior distribution — n_draw","text":"x object holding results, eg object generated call smooth_age() smooth_agetime(). value Number posterior draws. non-negative integer.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/n_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the number of draws from the posterior distribution — n_draw","text":"modified version x.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/n_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set the number of draws from the posterior distribution — n_draw","text":"","code":"res <- smooth_age(nevent_df = nz_divorces_2020,                   py_df = nz_population_2020,                   age_width_df = nz_age_width_df,                   age_min = 15) n_draw(res) #> [1] 1000 n_draw(res) <- 20 n_draw(res) #> [1] 20"},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_age_width_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Widths of age groups used with divorce data for New Zealand — nz_age_width_df","title":"Widths of age groups used with divorce data for New Zealand — nz_age_width_df","text":"Widths age groups used nz_divorces, nz_population, nz_divorces_2020, nz_population_2020.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_age_width_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Widths of age groups used with divorce data for New Zealand — nz_age_width_df","text":"","code":"nz_age_width_df"},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_age_width_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Widths of age groups used with divorce data for New Zealand — nz_age_width_df","text":"data frame following variables: age: Age, 5-year age groups, \"15-19\" \"65+\". width: Width age group.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces.html","id":null,"dir":"Reference","previous_headings":"","what":"Divorces in New Zealand — nz_divorces","title":"Divorces in New Zealand — nz_divorces","text":"Counts divorces age, sex, calendar year, New Zealand, 1992-2021.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divorces in New Zealand — nz_divorces","text":"","code":"nz_divorces"},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Divorces in New Zealand — nz_divorces","text":"data frame following variables: age: Age, 5-year age groups, \"15-19\" \"65+\". sex: \"Female\" \"Male\". time: Calendar year. nevent: Numbers divorces year.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Divorces in New Zealand — nz_divorces","text":"Derived data table \"Age divorces sex (marriages civil unions) (Annual-Dec)\" online database Infoshare Statistics New Zealand website. Data downloaded 22 March 2023.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces_2020.html","id":null,"dir":"Reference","previous_headings":"","what":"Divorces in New Zealand in 2020 — nz_divorces_2020","title":"Divorces in New Zealand in 2020 — nz_divorces_2020","text":"Counts divorces age sex, New Zealand, 2020.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces_2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divorces in New Zealand in 2020 — nz_divorces_2020","text":"","code":"nz_divorces_2020"},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces_2020.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Divorces in New Zealand in 2020 — nz_divorces_2020","text":"data frame following variables: age: Age, 5-year age groups, \"15-19\" \"65+\". sex: \"Female\" \"Male\". nevent: Numbers divorces year.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_divorces_2020.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Divorces in New Zealand in 2020 — nz_divorces_2020","text":"Derived data table \"Age divorces sex (marriages civil unions) (Annual-Dec)\" online database Infoshare Statistics New Zealand website. Data downloaded 22 March 2023.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Adult population of New Zealand — nz_population","title":"Adult population of New Zealand — nz_population","text":"Person-years lived population aged 15+ age, sex, calendar year, New Zealand, 1992-2021","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adult population of New Zealand — nz_population","text":"","code":"nz_population"},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adult population of New Zealand — nz_population","text":"data frame following variables: age: Age, 5-year age groups, \"15-19\" \"65+\". sex: \"Female\" \"Male\". time: Calendar year. py: Person-years lived.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adult population of New Zealand — nz_population","text":"Derived data table \"Estimated Resident Population Age Sex (1991+) (Annual-Dec)\" online database Infoshare Statistics New Zealand website. Data downloaded 26 March 2023.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population_2020.html","id":null,"dir":"Reference","previous_headings":"","what":"Adult population of New Zealand in 2020 — nz_population_2020","title":"Adult population of New Zealand in 2020 — nz_population_2020","text":"Person-years lived population aged 15+ age sex, New Zealand, 2020.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population_2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adult population of New Zealand in 2020 — nz_population_2020","text":"","code":"nz_population_2020"},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population_2020.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adult population of New Zealand in 2020 — nz_population_2020","text":"data frame following variables: age: Age, 5-year age groups, \"15-19\" \"65+\". sex: \"Female\" \"Male\". py: Person-years lived.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/nz_population_2020.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adult population of New Zealand in 2020 — nz_population_2020","text":"Derived data table \"Estimated Resident Population Age Sex (1991+) (Annual-Dec)\" online database Infoshare Statistics New Zealand website. Data downloaded 26 March 2023.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, components","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth rates over age — smooth_age","title":"Smooth rates over age — smooth_age","text":"Use data numbers events population risk produce estimates rates smoothed age. amount smoothing depends model used represent age effects. Current choices Spline() (default) RW2(). See documentation Spline() RW2() description mathematical models underlying smoothing.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth rates over age — smooth_age","text":"","code":"smooth_age(   nevent_df,   py_df,   agevar = \"age\",   byvar = character(),   age_width_df = NULL,   age_min = NULL,   spec_age = Spline() )"},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth rates over age — smooth_age","text":"nevent_df data frame column called \"nevent\" containing number events, plus additional classification variables. py_df data frame column called \"py\" containing exposure, plus additional classification variables. agevar name age variable nevent_df py_df. Defaults \"age\". byvar names classification variables nevent_df py_df, age (eg \"sex\" \"region\"). Optional. age_width_df data frame columns \"age\" \"width\", giving widths age group. Required age group labels integers. age_min lower limit youngest age group. Required age group labels integers. spec_age prior model age effect. Current choices: Spline() RW2(). Defaults Spline().","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth rates over age — smooth_age","text":"object class \"BayesRates_results\".","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth rates over age — smooth_age","text":"Dataset nevent_df must contain variable called nevent giving counts events, dataset py_df must contain variable called py giving population risk. nevent_df py_df must also contain age variable. age variable users multi-year age groups (eg \"15-19\" \"65+\"), smooth_age() needs help interpreting age groups. data frame age_width_df must supplied giving width age group, well value age_min giving lower limit youngest age group. (Future versions BayesRates try parse age group labels automatically.) nevent_df py_df must contain time variable. analyse data age time dimensions, use function smooth_agetime(). nevent_df py_df can contain additional classifying variables, sex region. Independent models fitted combination levels additional variables.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth rates over age — smooth_age","text":"","code":"res <- smooth_age(nevent_df = nz_divorces_2020,                   py_df = nz_population_2020,                   age_width_df = nz_age_width_df,                   age_min = 15) res #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect #>  age_effect ~ Spline() #>  #>    agevar: age #>     byvar: <none> #>    n_draw: 1000"},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_agetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth rates over age and time — smooth_agetime","title":"Smooth rates over age and time — smooth_agetime","text":"Use data numbers events population risk produce estimates rates smoothed age time. amount smoothing depends model used represent age time effects. Current choices age effects Spline() (default) RW2(). Current choices time effects TimeVarying() (default) TimeFixed(). See documentation Spline(), RW2(), TimeVarying(), TimeFixed() description mathematical models underlying smoothing.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_agetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth rates over age and time — smooth_agetime","text":"","code":"smooth_agetime(   nevent_df,   py_df,   agevar = \"age\",   timevar = \"time\",   byvar = character(),   age_width_df = NULL,   age_min = NULL,   spec_age = Spline(),   spec_time = TimeVarying() )"},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_agetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth rates over age and time — smooth_agetime","text":"nevent_df data frame column called \"nevent\" containing number events, plus additional classification variables. py_df data frame column called \"py\" containing exposure, plus additional classification variables. agevar name age variable nevent_df py_df. Defaults \"age\". timevar name time variable nevent_df py_df. Defaults \"time\". byvar names classification variables nevent_df py_df, age time (eg \"sex\" \"region\"). Optional. age_width_df data frame columns \"age\" \"width\", giving widths age group. Required age group labels integers. age_min lower limit youngest age group. Required age group labels integers. spec_age prior model age effect. Current choices: Spline() RW2(). Defaults Spline(). spec_time prior model time effect. Current choices: TimeFixed() TimeVarying(). Defaults TimeVarying().","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_agetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth rates over age and time — smooth_agetime","text":"object class \"BayesRates_results\".","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_agetime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth rates over age and time — smooth_agetime","text":"Dataset nevent_df must contain variable called nevent giving counts events, dataset py_df must contain variable called py giving population risk. nevent_df py_df must also contain age variable. age variable users multi-year age groups (eg \"15-19\" \"65+\"), smooth_age() needs help interpreting age groups. data frame age_width_df must supplied giving width age group, well value age_min giving lower limit youngest age group. (Future versions BayesRates try parse age group labels automatically.) nevent_df py_df must contain time variable. analyse data without time dimension, use function smooth_age(). Times must single years, eg 2015, 2016, 2017. may gaps, eg 2010, 2015, 2020: smooth_agetime() automatically estimates values missing periods. nevent_df py_df can contain additional classifying variables, sex region. Independent models fitted combination levels additional variables.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/smooth_agetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth rates over age and time — smooth_agetime","text":"","code":"results <- smooth_agetime(nevent_df = nz_divorces,                           py_df = nz_population,                           age_width_df = nz_age_width_df,                           age_min = 15) results #> --- Object of class \"BayesRates_results\" --- #>  #>      nevent ~ Poisson(rate * py) #>   log(rate) = age_effect + time_effect #>  age_effect ~ Spline() #> time_effect ~ TimeVarying() #>  #>    agevar: age #>   timevar: time #>     byvar: <none> #>    n_draw: 1000"},{"path":"https://junnizhang.github.io/BayesRates/reference/total_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise rates by adding up over the life time — total_rate","title":"Summarise rates by adding up over the life time — total_rate","text":"Construct summary measure age-specific rates summing rates, weighted width age group. calculations equivalent used construct total fertility rate (TFR).","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/total_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise rates by adding up over the life time — total_rate","text":"","code":"total_rate(x, interval = 0.95)"},{"path":"https://junnizhang.github.io/BayesRates/reference/total_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise rates by adding up over the life time — total_rate","text":"x object class \"BayesRates_results\", constructed via call smooth_age() smooth_agetime(). interval Width credible intervals. number 0 1. Default 0.95.","code":""},{"path":"https://junnizhang.github.io/BayesRates/reference/total_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise rates by adding up over the life time — total_rate","text":"tibble following columns: time variable specified timevar, x created call smooth_agetime() classifying variables, specified byvar original call smooth_age() smooth_agetime() .fitted. Point estimates model. (Posterior medians.) .lower, .upper. Lower upper limits credible interval specified interval. .probability. list column containing draws posterior distribution. .observed. Total rates constructed direct estimates, ie events divided population, smoothing.","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/reference/total_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise rates by adding up over the life time — total_rate","text":"","code":"res <- smooth_agetime(nevent_df = cn_divorces,                       py_df = cn_population,                       spec_time = TimeFixed()) total_rate(res) #> # A tibble: 39 × 6 #>     time .fitted  .lower .upper .probability  .observed #>    <int>   <dbl>   <dbl>  <dbl> <list>            <dbl> #>  1  1980  0.0108 0.00599 0.0189 <dbl [1,000]>   0.00631 #>  2  1981  0.0120 0.00751 0.0196 <dbl [1,000]>   0.0133  #>  3  1982  0.0124 0.00797 0.0191 <dbl [1,000]>   0.00749 #>  4  1983  0.0150 0.00967 0.0234 <dbl [1,000]>   0.0147  #>  5  1984  0.0152 0.0102  0.0232 <dbl [1,000]>   0.00902 #>  6  1985  0.0181 0.0124  0.0266 <dbl [1,000]>   0.0248  #>  7  1986  0.0175 0.0117  0.0256 <dbl [1,000]>   0.0154  #>  8  1987  0.0178 0.0121  0.0260 <dbl [1,000]>   0.0116  #>  9  1988  0.0226 0.0158  0.0316 <dbl [1,000]>   0.0220  #> 10  1989  0.0253 0.0181  0.0353 <dbl [1,000]>   0.0177  #> # ℹ 29 more rows"},{"path":"https://junnizhang.github.io/BayesRates/news/index.html","id":"bayesrates-020","dir":"Changelog","previous_headings":"","what":"BayesRates 0.2.0","title":"BayesRates 0.2.0","text":"Rewrote vignettes Revised README checks now passing","code":""},{"path":[]},{"path":"https://junnizhang.github.io/BayesRates/news/index.html","id":"interface-0-1-1","dir":"Changelog","previous_headings":"","what":"Interface","title":"BayesRates 0.1.1","text":"augment() components() now give result every time called, rather generating new results random. implemented storing random seed results object.","code":""}]
